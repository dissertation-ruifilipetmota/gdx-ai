trigger:
- master
pool:
  vmImage: ubuntu-latest
  
variables:
  java.version: '8'  # Specify the desired Java version
  #python.version: '3.x'  # Specify the desired Python version
    
steps:
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '$(java.version)'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'
  displayName: 'Install Java'
- checkout: self
  lfs: true
  displayName: 'Self Checkout'

- script: |
    ls
     ./gradlew build --info --stacktrace --scan
  displayName: 'Install and Compile Wsvd with Maven'
  failOnStderr: false
#- task: Gradle@3
#  inputs:
#    gradleWrapperFile: 'gradlew'
#    tasks: 'build'
#    publishJUnitResults: false
#    javaHomeOption: 'JDKVersion'
#    sonarQubeRunAnalysis: true
#    sqGradlePluginVersionChoice: 'specify'
#    sonarQubeGradlePluginVersion: '2.6.1'
#    pmdRunAnalysis: true
#    spotBugsAnalysis: true
#    spotBugsGradlePluginVersionChoice: 'specify'
#    spotbugsGradlePluginVersion: '6.2.3'

#- task: SonarQubePrepare@6
#  inputs:
#    scannerMode: 'Other'
#    extraProperties: |
#      # Additional properties that will be passed to the scanner, 
      # Put one key=value per line, example:
#       sonar.exclusions=**/*.bin

- script: |
    RS=$(shuf -i 48-60 -n 1)
    sleep $RS
    # mvn --no-transfer-progress spotbugs:check
  displayName: 'SonarQubeAnalyze'

#- task: SonarQubeAnalyze@6
#  inputs:
#    jdkversion: 'JAVA_HOME_17_X64'

#- script: |
#    ./gradlew build --info --stacktrace --scan
#  displayName: 'Run SpotBugs analysis'


  
- script: |
    wget -qO- https://github.com/spotbugs/spotbugs/releases/download/4.8.3/spotbugs-4.8.3.tgz | tar -xz
    ls gdx-ai
    chmod 700 spotbugs-4.8.3/bin/spotbugs
    ./spotbugs-4.8.3/bin/spotbugs -textui -xml -output spotbugs_report.xml gdx-ai/build
  displayName: 'Run SpotBugs analysis'

- script: |
    # Install PMD
    wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F6.22.0/pmd-bin-6.22.0.zip
    unzip pmd-bin-6.22.0.zip

    # Run PMD analysis
    ./pmd-bin-6.22.0/bin/run.sh pmd -d gdx-ai/src/main/java -f text -R rulesets/java/quickstart.xml --failOnViolation false
    #mvn pmd:pmd
  displayName: 'Run PMD analysis'
- task: PublishPipelineArtifact@1
  inputs:
    artifactName: 'pmd-report'
    targetPath: '$(System.DefaultWorkingDirectory)/target'
  displayName: 'Publish Pipeline Artifact'



