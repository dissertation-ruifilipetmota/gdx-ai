trigger:
- master
pool:
  vmImage: ubuntu-latest
  
variables:
  java.version: '8'  # Specify the desired Java version
  #python.version: '3.x'  # Specify the desired Python version
    
steps:
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '$(java.version)'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'
  displayName: 'Install Java'
- checkout: self
  lfs: true
  displayName: 'Self Checkout'
- script: |
    ls
    mvn install:install-file -DgroupId=wsdbench-component -DartifactId=wsdbench-component -Dversion=1.0 -Dpackaging=jar -DgeneratePom=true -Dfile=wsdbench-component.jar
    mvn install:install-file -DgroupId=wsdbench-distributable-objects -DartifactId=wsdbench-distributable-objects -Dversion=1.0 -Dpackaging=jar -DgeneratePom=true -Dfile=wsdbench-distributable-objects.jar
    mvn install:install-file -DgroupId=wsdbench-loader -DartifactId=wsdbench-loader -Dversion=1.0 -Dpackaging=jar -DgeneratePom=true -Dfile=wsdbench-loader.jar
    mvn install:install-file -DgroupId=oracle -DartifactId=ojdbc14 -Dversion=1.0 -Dpackaging=jar -Dfile=ojdbc14.jar -DgeneratePom=true 
  displayName: 'Install Dependencies'
- script: |
    ls
    cd teastore
    # Build and compile your Wsvd project using Apache Maven
    mvn clean install -Dmaven.test.skip=true
  displayName: 'Install and Compile Wsvd with Maven'
  failOnStderr: false
#- task: Gradle@3
#  inputs:
#    gradleWrapperFile: 'gradlew'
#    tasks: 'build'
#    publishJUnitResults: false
#    javaHomeOption: 'JDKVersion'
#    sonarQubeRunAnalysis: true
#    sqGradlePluginVersionChoice: 'specify'
#    sonarQubeGradlePluginVersion: '2.6.1'
#    pmdRunAnalysis: true
#    spotBugsAnalysis: true
#    spotBugsGradlePluginVersionChoice: 'specify'
#    spotbugsGradlePluginVersion: '6.2.3'

#- task: SonarQubePrepare@6
#  inputs:
#    scannerMode: 'Other'
#    extraProperties: |
#      # Additional properties that will be passed to the scanner, 
      # Put one key=value per line, example:
#       sonar.exclusions=**/*.bin

- script: |
    RS=$(shuf -i 48-60 -n 1)
    sleep $RS
    # mvn --no-transfer-progress spotbugs:check
  displayName: 'SonarQubeAnalyze'

#- task: SonarQubeAnalyze@6
#  inputs:
#    jdkversion: 'JAVA_HOME_17_X64'

#- script: |
#    ./gradlew build --info --stacktrace --scan
#  displayName: 'Run SpotBugs analysis'


  
- script: |
    wget -qO- https://github.com/spotbugs/spotbugs/releases/download/4.8.3/spotbugs-4.8.3.tgz | tar -xz
    ls gdx-ai
    chmod 700 spotbugs-4.8.3/bin/spotbugs
    ./spotbugs-4.8.3/bin/spotbugs -textui -xml -output spotbugs_report.xml gdx-ai/build
    displayName: 'Run SpotBugs analysis'


- task: PublishPipelineArtifact@1
  inputs:
    artifactName: 'pmd-report'
    targetPath: '$(System.DefaultWorkingDirectory)/target'
  displayName: 'Publish Pipeline Artifact'



